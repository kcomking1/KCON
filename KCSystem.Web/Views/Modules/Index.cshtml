

@{
    ViewBag.Title = "模板管理";
    Layout = "_Layout_List";
} 
<!-- Font Awesome -->
<link rel="stylesheet" href="@Url.Content("~/Scripts/vendor/adminlte/dist/css/font-awesome.min.css")">
<div class="fx-content">

    <div class="fx-wrapper">
        <form class="form-inline" id="searchForm">
            <div class="form-group">
                <input type="text" class="form-control input-sm" name="keyword" placeholder="上级模块名称">

            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary btn-sm" id="btnSearch">
                    @*<i class="glyphicon glyphicon-search"></i>*@
                    查询
                </button>
                <button type="button" class="btn btn-danger btn-sm" id="btnReflash">
                    @*<span class="glyphicon glyphicon-refresh" aria-hidden="true"></span>*@
                    刷新
                </button>
            </div>
        </form>
    </div>
    <div id="toobar"  class="clearfix">
        <div class="toobar-txt">模块列表</div>
        <div class="btn-group btn-group-sm toobar-btn">
            @if (User.HasClaim("模块管理", "编辑"))
            {
                <button onclick="openForm('', '添加新模块');" type="button" class="btn btn-primary btn-sm" aria-label="Left Align">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                    添加新模块
                </button>
            }

        </div>
    </div>
    <div class="fx-wrapper table-bodys">
        <table id="dataTable" class="table-bordered"></table>
    </div>
</div>

<script>
    var $table = $('#dataTable');
    $(function () {
        initTable()
    });

    //初始化表格
    function initTable() {
        $table.bootstrapTable({
            url: '@Url.Action("ModuleList")',
            idField: 'id',
            pagination: true,
            method: 'post',
            height: tableHeight,
            clickToSelect: false,
            sidePagination: "server",
            detailView: true, //父子表
            pageNumber: 1,
            pageSize: 20,
            pageList: [10,20, 50],
            columns: [
                { title: '编号', field: 'id', width: '50px' },
                { title: '模块名称', field: 'moduleName', width: '150px' },
                {
                    title: '模块URL',
                    field: 'moduleUrl', width: '200px',
                    formatter: function(value, row) {
                        return value === null ? "#" : `${value}`;
                    }
                },
                {
                    title: '模块说明',
                    field: 'moduleDesc', width: '200px'
                },
                {
                    title: '排序',
                    field: 'moduleSortIndex', width: '50px'
                } ,
                {
                    title: '图标',
                    field: 'icon', width: '50px',
                    formatter: function(value, row) {
                        return `<span class="${value}"></span>`;
                    }
                },
                {
                    title: '操作',
                    field: '_',
                    width: '150px',
                    formatter: function(value, row) {
                        var builder = new BtnBuilder();
                        @if (User.HasClaim("模块管理", "编辑")) {
                            <text>
                            builder.AddBtn({
                                name: "编辑",
                                icon: 'glyphicon-ok-circle',
                                function: 'openForm',
                                param: [row["id"], "编辑模块信息"]
                            });
                            </text>
                        }
                        @if (User.HasClaim("模块管理", "删除"))
                        {
                            <text>
                                builder.AddBtn({
                                    name: "删除",
                                    icon: 'glyphicon-ok-circle',
                                    function: 'deleteData',
                                    param: [row["id"]]
                                });
                            </text>
                        }
                        return builder.build();
                    }
                }
            ],
            queryParams: function (params) {
                var searchParams = $('#searchForm').getValues();
                $.extend(params, searchParams);

                return params;
            }, onExpandRow: function (index, row, $detail) {
                if (row.children.length > 0) {
                    initSubTable(index, row, $detail);
                }

            }
        })
    }

    function initSubTable(index, parentRow, object) {
        var parentId = parentRow.id;
        var cur_Table = object.html('<table></table>').find('table');
        $(cur_Table).bootstrapTable({
            clickToSelect: true,
            data: parentRow.children,
            pagination: false,
            detailView: false, //父子表
            uniqueId: "id",
            pageSize: 10,
            pageList: [10, 25],
            columns: [
                { title: 'id', field: 'id', width: '50px' },
                { title: '模块名称', field: 'moduleName', width: '150px' },
                {
                    title: '模块URL',
                    field: 'moduleUrl', width: '200px',
                    formatter: function(value, row) {
                        return value === null ? "#" : `${value}`;
                    }
                },
                {
                    title: '模块说明', width: '200px',
                    field: 'moduleDesc'
                },
                {
                    title: '排序', width: '50px',
                    field: 'moduleSortIndex'
                },
                 
                {
                    title: '图标',
                    field: 'icon', width: '50px',
                    formatter: function(value, row) {
                        return `<span class="${value}"></span>`;
                    }
                },
                {
                    title: '操作',
                    field: '_',
                    width: '150px',
                    formatter: function(value, row) {
                        var builder = new BtnBuilder();
                        @if (User.HasClaim("模块管理", "编辑")) {
                            <text>
                            builder.AddBtn({
                                name: "编辑",
                                icon: 'glyphicon-ok-circle',
                                function: 'openForm',
                                param: [row["id"], "编辑模块信息"]
                            });
                            </text>
                        }
                        @if (User.HasClaim("模块管理", "删除"))
                        {
                            <text>
                                builder.AddBtn({
                                    name: "删除",
                                    icon: 'glyphicon-ok-circle',
                                    function: 'deleteData',
                                    param: [row["id"]]
                                });
                            </text>
                        }
                        return builder.build();
                    }
                }
            ]
        });
    };
    //绑定事件
    function bindEvent() {

    }
    //打开表单
    function openForm(id, title) {

        dialogOpen({
            id: 'form',
            title: title,
            width: '780px',
            height: '650px',
            btn: [id === '' ? "添加" : "编辑", '取消'],
            url: '@Url.Action("Add")/{0}'.format(id || ''),
            yes: function (window, body) {
                window.submitForm();
            },
            end: function() {
                $table.bootstrapTable('refresh');
            }
        });
    }




    //删除数据
    function deleteData(id) {
        dialogComfirm('确认删除吗？', function () {
            var ids = [];

            if (typeof (id) == 'string') {//单条数据
                ids.push(id);
            } else {//多条数据
                var rows = $table.bootstrapTable('getSelections');
                if (rows.length === 0) {
                    dialogError('请选择需要删除的数据！');
                    return;
                } else {
                    $.each(rows,
                        function(index, value) {
                            ids.push(value['id']);
                        });
                }
            }

            loading();
            $.get('@Url.Action("DeleteData")',
                { ids: JSON.stringify(ids) },
                function(resJson) {

                    if (resJson.success) {
                        $table.bootstrapTable('refresh');
                        dialogSuccess('删除成功!');
                    } else {
                        dialogError(resJson.msg);
                    }
                }
            ).always(function() {
                loading(false);
            });
        });
    }
</script>

